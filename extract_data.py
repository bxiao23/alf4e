import pandas as pd

# NOTE: as of now this is just some random code fragments migrated from
# the main script. Intent is to extract only the data points we care about
# from the DataFrame generated by ALF run, and store them in a more friendly
# format. Need to refactor to include the stuff we want, and ideally vectorize
# it as well.

FILENAME = "obs/L2x2_mu_data_aggregate.pkl"
SAVENAME = "obs/L2x2_mu_data_extracted.pkl"

SEQUENTIALIZE = True

class Sequence:
    def __init__(self):
        self.c = 0
    def bump(self, *args, **kwargs):
        out = self.c
        self.c += 1
        return out

param_keys = ["t", "U", "mu", "beta", "dtau"]
param_names = ["ham_t", "ham_u", "ham_chem", "beta", "dtau"]

observables = ["N", "E", "T", "V"]
obs_names_base = ["Part", "Ener", "Kin", "Pot"]

obs_errs = ["d"+o for o in observables]
obs_signs = ["s"+o for o in observables]
obs_names = [o + "_scal0" for o in obs_names_base]
obs_err_names = [o + "_scal0_err" for o in obs_names_base]
obs_sign_names = [o + "_scal_sign" for o in obs_names_base]

lattice_obs = ["DC"]
lattice_obs_names = ["Den_eqR_sum"]
lattice_obs_errs = ["d" + o for o in lattice_obs]
lattice_obs_err_names = [o + "_err" for o in lattice_obs_names]

select = param_names + obs_names   + obs_err_names + obs_sign_names + \
            lattice_obs_names + lattice_obs_err_names
labels = param_keys  + observables + obs_errs      + obs_signs      + \
            lattice_obs       + lattice_obs_errs
translate = {old:new for old, new in zip(select, labels)}

df = pd.read_pickle(FILENAME)
df = df[select].rename(translate, axis=1)
if SEQUENTIALIZE:
    s = Sequence()
    df = df.rename(s.bump, axis=0)
df.to_pickle(SAVENAME)
